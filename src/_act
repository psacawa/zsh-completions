#compdef act
local -a options
options=(
  '(-a,--actor)'{-a,--actor}'[user that triggered the event (default "nektos/act")]'
  '(-b,--bind)'{-b,--bind}'[bind working directory to container, rather than copy]'
  '(--container-architecture)'--container-architecture'[Architecture which should be used to run containers, e.g.: linux/amd64. If not specified, will use host default architecture. Requires Docker server API Version 1.41+. Ignored on earlier Docker server platforms.]'
  '(--container-cap-add)'--container-cap-add'[kernel capabilities to add to the workflow containers (e.g. --container-cap-add SYS_PTRACE)]'
  '(--container-cap-drop)'--container-cap-drop'[kernel capabilities to remove from the workflow containers (e.g. --container-cap-drop SYS_PTRACE)]'
  '(--container-daemon-socket)'--container-daemon-socket'[Path to Docker daemon socket which will be mounted to containers (default "/var/run/docker.sock")]'
  '(--defaultbranch)'--defaultbranch'[the name of the main branch]'
  '(--detect-event)'--detect-event'[Use first event type from workflow as event that triggered the workflow]'
  '(-C,--directory)'{-C,--directory}'[working directory (default ".")]'
  '(-n,--dryrun)'{-n,--dryrun}'[dryrun mode]'
  '(--env)'--env'[env to make available to actions with optional value (e.g. --env myenv=foo or --env myenv)]'
  '(--env-file)'--env-file'[environment file to read and use as env in the containers (default ".env")]'
  '(-e,--eventpath)'{-e,--eventpath}'[path to event JSON file]'
  '(--github-instance)'--github-instance'[GitHub instance to use. Dont use this if you are not using GitHub Enterprise Server. (default "github.com")]'
  '(-g,--graph)'{-g,--graph}'[draw workflows]'
  '(-h,--help)'{-h,--help}'[help for act]'
  '(--insecure-secrets,NOT)'--insecure-secrets,NOT'[NOT RECOMMENDED! Doesnt hide secrets while printing logs.]'
  '(-j,--job)'{-j,--job}'[run job]'
  '(-l,--list)'{-l,--list}'[list workflows]'
  '(--no-recurse)'--no-recurse'[Flag to disable running workflows from subdirectories of specified path in '--workflows'/'-W' flag]'
  '(-P,--platform)'{-P,--platform}'[custom image to use per platform (e.g. -P ubuntu-18.04=nektos/act-environments-ubuntu:18.04)]'
  '(--privileged)'--privileged'[use privileged mode]'
  '(-p,--pull)'{-p,--pull}'[pull docker image(s) even if already present]'
  '(-q,--quiet)'{-q,--quiet}'[disable logging of output from steps]'
  '(-r,--reuse)'{-r,--reuse}'[reuse action containers to maintain state]'
  '(--rm)'--rm'[automatically remove containers just before exit]'
  '(-s,--secret)'{-s,--secret}'[secret to make available to actions with optional value (e.g. -s mysecret=foo or -s mysecret)]'
  '(--secret-file)'--secret-file'[file with list of secrets to read from (e.g. --secret-file .secrets) (default ".secrets")]'
  '(--use-gitignore)'--use-gitignore'[Controls whether paths specified in .gitignore should be copied into container (default true)]'
  '(--userns)'--userns'[user namespace to use]'
  '(-v,--verbose)'{-v,--verbose}'[verbose output]'
  '(--version)'--version'[version for act]'
  '(-w,--watch)'{-w,--watch}'[watch the contents of the local repo and run when files change]'
  '(-W,--workflows)'{-W,--workflows}'[path to workflow file(s) (default "./.github/workflows/")]'
)


local -a events=(check_run check_suite create cron default delete deployment deployment_status deprecationMessage description fork gollum inputs issue_comment issues label member milestone page_build project project_card project_column public pull_request pull_request_review pull_request_review_comment pull_request_target push registry_package release repository_dispatch required schedule status types watch workflow_dispatch workflow_run workflows)

_arguments -S -s $options
if [[ $CURRENT -ge 2 ]]; then
  _describe events events
fi
