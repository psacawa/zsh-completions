#compdef otatool otatool.py

# AUTOMATICALLY GENERATED by `shtab`


_shtab_otatool_options_() {
  local _commands=(
    "erase_ota_partition:"
    "erase_otadata:"
    "read_ota_partition:"
    "read_otadata:"
    "switch_ota_partition:"
    "write_ota_partition:"
  )
  _describe 'ESP-IDF OTA Partitions Tool commands' _commands
}

_shtab_otatool_options=(
  "(- :)"{-h,--help}"[show this help message and exit]"
  {--quiet,-q}"[suppress stderr messages]"
  "--esptool-args[additional main arguments for esptool]:esptool_args:"
  "--esptool-write-args[additional subcommand arguments for esptool write_flash]:esptool_write_args:"
  "--esptool-read-args[additional subcommand arguments for esptool read_flash]:esptool_read_args:"
  "--esptool-erase-args[additional subcommand arguments for esptool erase_region]:esptool_erase_args:"
  {--port,-p}"[port where the device to read the partition table from is attached]:port:"
  {--baud,-b}"[baudrate to use]:baud:"
  {--partition-table-offset,-o}"[offset to read the partition table from]:partition_table_offset:"
  {--partition-table-file,-f}"[file (CSV\/binary) to read the partition table from\;                                                             overrides device attached to specified port as the partition table source when defined]:partition_table_file:"
  "-s[print shell completion script]:s:(bash zsh tcsh)"
)

_shtab_otatool_erase_ota_partition_options=(
  "(- :)"{-h,--help}"[show this help message and exit]"
  "--slot[slot number of the ota partition]:slot:"
  "--name[name of the ota partition]:name:"
)

_shtab_otatool_erase_otadata_options=(
  "(- :)"{-h,--help}"[show this help message and exit]"
)

_shtab_otatool_read_ota_partition_options=(
  "(- :)"{-h,--help}"[show this help message and exit]"
  "--slot[slot number of the ota partition]:slot:"
  "--name[name of the ota partition]:name:"
  "--output[file to write the contents of the ota partition to]:output:"
)

_shtab_otatool_read_otadata_options=(
  "(- :)"{-h,--help}"[show this help message and exit]"
  "--spi-flash-sec-size[value of SPI_FLASH_SEC_SIZE macro]:spi_flash_sec_size:"
)

_shtab_otatool_switch_ota_partition_options=(
  "(- :)"{-h,--help}"[show this help message and exit]"
  "--slot[slot number of the ota partition]:slot:"
  "--name[name of the ota partition]:name:"
  "--spi-flash-sec-size[value of SPI_FLASH_SEC_SIZE macro]:spi_flash_sec_size:"
)

_shtab_otatool_write_ota_partition_options=(
  "(- :)"{-h,--help}"[show this help message and exit]"
  "--slot[slot number of the ota partition]:slot:"
  "--name[name of the ota partition]:name:"
  "--input[file whose contents to write to the ota partition]:input:"
)


_shtab_otatool() {
  local context state line curcontext="$curcontext"

  _arguments -C $_shtab_otatool_options \
    ': :_shtab_otatool_options_' \
    '*::: :->otatool'

  case $state in
    otatool)
      words=($line[1] "${words[@]}")
      (( CURRENT += 1 ))
      curcontext="${curcontext%:*:*}:_shtab_otatool-$line[1]:"
      case $line[1] in
        erase_ota_partition) _arguments -C $_shtab_otatool_erase_ota_partition_options ;;
        erase_otadata) _arguments -C $_shtab_otatool_erase_otadata_options ;;
        read_ota_partition) _arguments -C $_shtab_otatool_read_ota_partition_options ;;
        read_otadata) _arguments -C $_shtab_otatool_read_otadata_options ;;
        switch_ota_partition) _arguments -C $_shtab_otatool_switch_ota_partition_options ;;
        write_ota_partition) _arguments -C $_shtab_otatool_write_ota_partition_options ;;
      esac
  esac
}



typeset -A opt_args
_shtab_otatool "$@"
