#compdef monkeytype

# AUTOMATCALLY GENERATED by `shtab`

_shtab_monkeytype_options_=(
  "(- :)"{-h,--help}"[show this help message and exit]"
  "--disable-type-rewriting[Show types without rewrite rules applied (default\: False)]"
  {--limit,-l}"[How many traces to return from storage (default\: 2000, unless changed in your config)]:limit:"
  {--verbose,-v}"[Show verbose output (e.g. include trace-decoding-failed errors)]"
  {--config,-c}"[The \<module\>\:\<qualname\> of the config to use (default\: monkeytype_config\:CONFIG if it exists, else monkeytype.config\:DefaultConfig())]:config:"
)

_shtab_monkeytype_commands_() {
  local _commands=(
    "apply:Generate and apply a stub"
    "list-modules:Listing of the unique set of module traces"
    "run:Run a Python script under MonkeyType tracing"
    "stub:Generate a stub"
  )

  _describe 'shtab commands' _commands
}

_shtab_monkeytype_apply=(
  "(- :)"{-h,--help}"[show this help message and exit]"
  "--sample-count[Print to stderr the numbers of traces stubs are based on]"
  "--ignore-existing-annotations[Ignore existing annotations when applying stubs from traces.]"
  ":A string of the form \<module\>\[\:\<qualname\>\] (e.g.:"
)

_shtab_monkeytype_list_modules=(
  "(- :)"{-h,--help}"[show this help message and exit]"
)

_shtab_monkeytype_run=(
  "(- :)"{-h,--help}"[show this help message and exit]"
  "-m[Run a library module as a script]"
  ":Filesystem path to a Python script file to run under tracing:"
  ":script_args:"
)

_shtab_monkeytype_stub=(
  "(- :)"{-h,--help}"[show this help message and exit]"
  "--sample-count[Print to stderr the numbers of traces stubs are based on]"
  "--ignore-existing-annotations[Ignore existing annotations and generate stubs only from traces.]"
  "--omit-existing-annotations[Omit from stub any existing annotations in source. Implied by --apply.]"
  "--diff[Compare stubs generated with and without considering existing annotations.]"
  ":A string of the form \<module\>\[\:\<qualname\>\] (e.g.:"
)

typeset -A opt_args
local context state line curcontext="$curcontext"

_arguments \
  $_shtab_monkeytype_options_ \
   \
  ': :_shtab_monkeytype_commands_' \
  '*::args:->args'

case $words[1] in
  apply) _arguments $_shtab_monkeytype_apply ;;
  list-modules) _arguments $_shtab_monkeytype_list_modules ;;
  run) _arguments $_shtab_monkeytype_run ;;
  stub) _arguments $_shtab_monkeytype_stub ;;
esac
