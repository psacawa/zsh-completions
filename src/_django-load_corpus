#autoload

# AUTOMATCALLY GENERATED by `shtab`

_shtab_manage_py_load_corpus_options_=(
  "(- :)"{-h,--help}"[show this help message and exit]"
  "(- :)--version[show program\'s version number and exit]"
  {-v,--verbosity}"[Verbosity level\; 0\=minimal output, 1\=normal output, 2\=verbose output, 3\=very verbose output]:verbosity:(0 1 2 3)"
  "--settings[The Python path to a settings module, e.g. \"myproject.settings.main\". If this isn\'t provided, the DJANGO_SETTINGS_MODULE environment variable will be used.]:settings:"
  "--pythonpath[A directory to add to the Python path, e.g. \"\/home\/djangoprojects\/myproject\".]:pythonpath:"
  "--traceback[Raise on CommandError exceptions]"
  "--no-color[Don\'t colorize the command output.]"
  "--force-color[Force colorization of the command output.]"
  "--skip-checks[Skip system checks.]"
  "--print-completions[print shell completion script]:print_completions:(bash zsh)"
  {--limit,-l}"[Limit on number of phrase pairs to load]:limit:"
  {--reload,-r}"[Reload a corpus when it\'s already present, erasing existing items]"
  {--delete,-d}"[Delete an active corpus instead of loading it.]"
  {--size,-s}"[Size of models to work with]:size:(lg md sm trf)"
  "--lang1-size[Size of lang1 model to work with]:lang1_size:(lg md sm trf)"
  "--lang1-model[Model of lang1 to work with]:lang1_model:"
  "--lang2-size[Size of lang2 model to work with]:lang2_size:(lg md sm trf)"
  "--lang2-model[Model of lang2 to work with]:lang2_model:"
  "--skip-weights[wether to run SQL script to refresh search weights]"
  {--gpu,-g}"[Allocate model memory on GPU (doesn\'t help speed)]:gpu:"
)

_shtab_manage_py_load_corpus_commands_() {
  local _commands=(
    
  )

  _describe 'manage.py load_corpus commands' _commands
}


typeset -A opt_args
local context state line curcontext="$curcontext"

_arguments \
  $_shtab_manage_py_load_corpus_options_ \
  ":SQLite database containing corpus:" \
  ': :_shtab_manage_py_load_corpus_commands_' \
  '*::args:->args'

case $words[1] in
  
esac
