#compdef pelican-themes

# AUTOMATICALLY GENERATED by `shtab`


_shtab_pelican_commands() {
  local _commands=(
    
  )
  _describe 'shtab commands' _commands
}

_shtab_pelican_options=(
  "(- : *)"{-h,--help}"[show this help message and exit]"
  {-l,--list}"[Show the themes already installed and exit]"
  {-p,--path}"[Show the themes path and exit]"
  "(- : *)"{-V,--version}"[Print the version of this script]"
  {-i,--install}"[The themes to install]:to_install:"
  {-r,--remove}"[The themes to remove]:to_remove:"
  {-U,--upgrade}"[The themes to upgrade]:to_upgrade:"
  {-s,--symlink}"[Same as \`--install\', but create a symbolic link instead of copying the theme. Useful for theme development]:to_symlink:"
  {-c,--clean}"[Remove the broken symbolic links of the theme path]"
  {-v,--verbose}"[Verbose output]"
)


_shtab_pelican() {
  local context state line curcontext="$curcontext" one_or_more='(-)*' remainder='(*)'

  if ((${_shtab_pelican_options[(I)${(q)one_or_more}*]} + ${_shtab_pelican_options[(I)${(q)remainder}*]} == 0)); then  # noqa: E501
    _shtab_pelican_options+=(': :_shtab_pelican_commands' '*::: :->shtab')
  fi
  _arguments -C $_shtab_pelican_options

  case $state in
    shtab)
      words=($line[1] "${words[@]}")
      (( CURRENT += 1 ))
      curcontext="${curcontext%:*:*}:_shtab_pelican-$line[1]:"
      case $line[1] in
        
      esac
  esac
}



typeset -A opt_args
_shtab_pelican "$@"
