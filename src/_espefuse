#compdef espefuse

# AUTOMATCALLY GENERATED by `shtab`


_shtab_espefuse_commands() {
  local _commands=(
    
  )
  _describe 'espefuse commands' _commands
}

_shtab_espefuse_options=(
  {--chip,-c}"[Target chip type]:chip:(auto esp32 esp32c2 esp32c3 esp32c6 esp32h2beta1 esp32s2 esp32s3 esp32s3beta2)"
  {--baud,-b}"[Serial port baud rate used when flashing\/reading]:baud:"
  {--port,-p}"[Serial port device]:port:"
  "--before[What to do before connecting to the chip]:before:(default_reset usb_reset no_reset no_reset_no_sync)"
  {--debug,-d}"[Show debugging information (loglevel\=DEBUG)]"
  "--virt[For host tests, the tool will work in the virtual mode (without connecting to a chip).]"
  "--path-efuse-file[For host tests, saves efuse memory to file.]:path_efuse_file:"
  "--do-not-confirm[Do not pause for confirmation before permanently writing efuses. Use with caution.]"
)


_shtab_espefuse() {
  local context state line curcontext="$curcontext"

  _arguments -C $_shtab_espefuse_options \
    ': :_shtab_espefuse_commands' \
    '*::: :->espefuse'

  case $state in
    espefuse)
      words=($line[1] "${words[@]}")
      (( CURRENT += 1 ))
      curcontext="${curcontext%:*:*}:_shtab_espefuse-$line[1]:"
      case $line[1] in
        
      esac
  esac
}



typeset -A opt_args
_shtab_espefuse "$@"
